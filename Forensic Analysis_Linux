File system analysis is a critical skill in cybersecurity, involving the examination of file structures and contents to detect anomalies, recover data, and understand system activities. This lab will guide you through basic file system analysis on a Linux system, helping you to identify, analyze, and interpret various file system components and metadata.

Category: Digital Forensics and Incident Response
Sub-Category: Linux Forensics
Level: Beginner

Pre-requisites
Basic understanding of Linux commands and file system structure.
A Linux system or virtual machine with sudo privileges.
Familiarity with command-line interface (CLI).
Lab Setup and Tools
Lab Setup
Install a Linux distribution (e.g., Ubuntu, Fedora) on your system or set up a virtual machine using VirtualBox or VMware.
Ensure you have sudo access to install necessary tools and perform analysis.
Tools
ls - List directory contents
stat - Display file or file system status
find - Search for files in a directory hierarchy
grep - Search through text
file - Determine file type
df - Report file system disk space usage
du - Estimate file space usage
mount - Mount and unmount file systems
Exercises
If you prefer video, I've made a video on Linux File System Analysis. Click on the imageðŸ‘‡ Linux File System Analysis

Exercise 1: Listing and Understanding Directory Contents
Steps
List contents of a directory:
ls -l /home
Expected Output: Detailed list of files and directories within /home including permissions, owner, group, size, and modification date.

View hidden files:
ls -la /home
Expected Output: Detailed list including hidden files (those starting with a dot).

Recursively lists all files and directories
ls -lR /mnt/forensic
Expected Output:

The directory structure with detailed information about each file and directory
Allows for easy identification of deeply nested files and directories
Exercise 2: Analyzing File Metadata
Display file status:
stat /home/username/file.txt
Expected Output: Detailed file information including inode number, access/modification/change times, size, and permissions.

Determine file type:
file /home/username/file.txt
Expected Output: Description of the file type (e.g., ASCII text, directory, symbolic link).

Search for specific files:
find /home -name "*.txt"
Expected Output: List of .txt files under /home.

Search for empty files
find /home -empty
Expected Output: List of all the empty files Step5: Find Files by Size

find /home -type f -size +100M
Expected Output: List of all the files of size more than 100 MBs

Find Files by Modification Time:
find /home -type f -mtime -7
Expected Output: This command finds files modified in the last 7 days.

Find Files by Access Time
find /home -type f -atime -7
Expected Output: This command finds files accessed in the last 7 days.

Find Files by Access Time
find /home -type f -ctime -7
Expected Output: This command finds files created in the last 7 days.

Exercise 3: Disk Usage Analysis
Step1: Report file system disk space usage:

df -h
Expected Output: Human-readable format of disk space usage for all mounted file systems.

Step2: Check disk usage of a specific directory:

du -sh /home/username
Expected Output: Total disk usage of the specified directory in a human-readable format.

Step3: List disk usage of all files and directories:

du -ah /home/username
Expected Output: Disk usage for each file and directory within the specified path.

Exercise 4: Searching and Filtering File Contents
Step1: Search for a string within files:

grep "password" /home/username/*.txt
Expected Output: Lines containing the word "password" in any .txt file within the specified directory.

Step2: Recursive search in directories:

grep -r "password" /home/username
Expected Output: Lines containing the word "password" in all files within the specified directory and its subdirectories.

Step3: Count occurrences of a string:

grep -c "password" /home/username/*.txt
Expected Output: Number of lines containing "password" in each file.

Exercise 5: Mounting and Unmounting File Systems
The mount command in Linux is an essential tool in digital forensics for accessing and analyzing disk images and partitions without altering their content. Here are some ways to use the mount command effectively in digital forensics:

Step1: List mounted file systems:

mount | grep "^/dev"
Expected Output: List of currently mounted file systems.

Step2: Mount a new file system:

sudo mount /dev/sdb1 /mnt
Expected Output: /dev/sdb1 mounted at /mnt (no output if successful).

Step3: Unmount the file system:

sudo umount /mnt
Expected Outcome: /mnt unmounted (no output if successful).

By completing these exercises, you will gain a solid foundation in basic file system analysis on Linux, which is essential for more advanced cybersecurity tasks.
